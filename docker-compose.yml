services:
  postgres:
    image: postgres:11.5-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=Pedan1982
      - POSTGRES_DB=pcloud2db
    ports:
      - 5432
    networks:
      - shared-network
    volumes:
      - ./postgres-db:/var/lib/postgresql/data

  pythonface:
    container_name: pcloud-python
    restart: unless-stopped
    image: pcloud-python:1
    build:
      context: ./pyserver
#      target: production
      dockerfile: Dockerfile
    ports:
      - 6000
    networks:
      - shared-network
    volumes:
      - ./share:/var/share

  server:
    container_name: pcloud2-server
    restart: unless-stopped
    image: pcloud2-server:1
    build:
      context: ./pserver
#      target: production
      dockerfile: Dockerfile
    ports:
      - 5554:5554
    networks:
      - shared-network
    depends_on:
      - postgres
      - pythonface
    volumes:
      - ./share:/var/share

  client:
    container_name: pcloud-client_spa
    restart: unless-stopped
    image: pcloud-client_spa:1
    build:
      context: ./pclient_spa
#      target: production
      dockerfile: Dockerfile
    ports:
      - 4000:80
      - 443:443
    networks:
      - shared-network
    depends_on:
      - server 
      - certbot  
    volumes:
       - ./certbot/www:/var/www/certbot/:ro
       - ./certbot/conf:/etc/letsencrypt/:ro

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw 
    entrypoint: "/bin/sh -c 'trap exit TERM; certbot certonly --webroot --webroot-path=/var/www/certbot --email your-email@example.com --agree-tos --no-eff-email -d yourdomain.com -d www.yourdomain.com && while :; do certbot renew; sleep 12h & wait $${!}; done;'"


#   client:
#     container_name: pcloud2-client
#     restart: unless-stopped
#     image: pcloud2-client:1
#     build:
#       context: ./pclient
# #      target: production
#       dockerfile: Dockerfile
#     ports:
#       - 4000:3000
#     networks:
#       - shared-network
#     depends_on:
#       - server



networks:
  shared-network:

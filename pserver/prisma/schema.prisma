// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(cuid())
  name     String?
  email    String  @unique
  password String
  active   Boolean @default(true)
  roles    Roles   @default(user)

  photos   Photos[]
  Clusters Clusters[]
  Faces    Faces[]

  @@map("users")
}

model Photos {
  id         String    @id @default(cuid())
  path       String    @unique
  dateCreate DateTime? @map("date_create")
  longitude  String?
  latitude   String?

  user   User?   @relation(fields: [userId], references: [id])
  userId String? @map("user_id")
  faces  Faces[]

  @@map("photos")
}

model Faces {
  id     String @id @default(cuid())
  path   String @unique
  left   Int?
  right  Int?
  top    Int?
  bottom Int?
  user   User   @relation(fields: [userId], references: [id])

  photo     Photos?   @relation(fields: [photosId], references: [id])
  photosId  String?   @map("photo_id")
  clusters  Clusters? @relation(fields: [clusterId], references: [id])
  clusterId String?   @map("cluster_id")
  userId    String    @map("user_id")

  @@map("faces")
}

model Clusters {
  id String @id

  faces Faces[]

  name String

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  @@map("clusters")
}

enum Roles {
  user
  admin
}
